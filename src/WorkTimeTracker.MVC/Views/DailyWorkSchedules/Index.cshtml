@using WorkTimeTracker.Application.DailyWorkSchedules
@using WorkTimeTracker.Application.Departments.Queries
@using WorkTimeTracker.Application.Employees
@model IDictionary<EmployeeDto, List<DailyWorkScheduleDto>>

@{
    ViewData["Title"] = "Index";
    int year = TempData["DateYear"] != null ? int.Parse(TempData["DateYear"]!.ToString()!) : DateTime.Now.Date.Year;
    int month = TempData["DateMonth"] != null ? int.Parse(TempData["DateMonth"]!.ToString()!) : DateTime.Now.Date.Month;
    string employeeDepartmentId = TempData["EmployeeDepartmentId"]?.ToString() ?? string.Empty;
}

<body class="no-margin">
    <h1>Index @year @month</h1>

    @using (Html.BeginForm("Index", "DailyWorkSchedules", FormMethod.Get))
    {
        <div class="row">
            <div class="col-2">
                <select class="form-control form-select" asp-for="@year" name="Year">
                    @for (int i = 2020; i < 2030; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
            <div class="col-2">
                <select class="form-control form-select" asp-for="@month" name="Month">
                    @for (int i = 1; i < 13; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
            <div class="col-3">
                <select class="form-control form-select" asp-for="@employeeDepartmentId" name="DepartmentId">
                    @foreach (DepartmentDetailsDto department in ViewBag.Departments)
                    {
                        <option value="@department.Id">@department.Name</option>
                    }
                </select>
            </div>
            <div class="col-2">
                <input class="btn btn-primary" type="submit" value="Submit" />
            </div>
        </div>
    }

    <table class="table no-margin" style="margin-right: 0">
        <thead>
            <tr>
                <th>Employee</th>
                @for (int i = 1; i < DateTime.DaysInMonth(year, month) + 1; i++)
                {
                    var a = new DateTime(year, month, i);

                    <th>@string.Concat(i, '\n', a.ToString("ddd"))</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@string.Concat(item.Key.FirstName, ' ', item.Key.LastName)</td>
                    @for (int i = 1; i < DateTime.DaysInMonth(year, month) + 1; i++)
                    {
                        @if (item.Value.Exists(schedule => schedule.Date.Date == new DateTime(year, month, i).Date))
                        {
                            <td>
                                <partial name="_ModalDialogDetails" model="new DailyWorkScheduleDto() { EmployeeId = item.Key.Id, Employee = item.Key, PlannedWorkStart = item.Value.FirstOrDefault(x => x.Date.Day == i)?.PlannedWorkStart ?? default,  PlannedWorkEnd = item.Value.FirstOrDefault(x => x.Date.Day == i)?.PlannedWorkEnd ?? default, Date = new DateTime(year, month, i) }" />
                            </td>
                        }
                        else
                        {
                            <td>
                                <button class="btn btn-primary">
                                    <a asp-action="create" asp-route-employeeid="@item.Key.Id" asp-route-date="@(new DateTime(year, month, i).Date)" style="color: white; text-decoration: none;">Create New</a>
                                </button>
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
</body>

<style>
    body.no-margin .container {
        margin-left: 0;
        margin-right: 0;
    }
</style>
