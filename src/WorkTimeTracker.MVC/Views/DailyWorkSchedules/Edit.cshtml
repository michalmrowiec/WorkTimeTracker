@using WorkTimeTracker.Application.ActionTimes.Commands.CreateActionTime
@using WorkTimeTracker.Domain.Entities
@using WorkTimeTracker.Domain.Utils
@model WorkTimeTracker.Application.DailyWorkSchedules.DailyWorkScheduleDto

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>UpdateDailyWorkScheduleCommand</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input asp-for="Id" class="form-control" type="hidden" />

            <input asp-for="EmployeeId" class="form-control" type="hidden" />

            <input asp-for="Date" class="form-control" type="hidden" />

            <div class="form-floating mb-1">
                <input class="form-control" disabled value="@string.Concat(Model.Employee?.FirstName, ' ', Model.Employee?.LastName)" />
                <label class="control-label">Employee</label>
            </div>

            <div class="form-floating mb-1">
                <select asp-for="TypeOfDay" class="form-control form-select" id="item-select">
                    @foreach (var typeOfDay in EnumToListDisplay.GetEnumValuesAndDisplayNames<TypeOfDay>())
                    {
                        @if (Model.TypeOfDay.ToString() == typeOfDay.value)
                        {
                            <option selected value="@typeOfDay.value">@typeOfDay.displayName</option>
                        }
                        else
                        {
                            <option value="@typeOfDay.value">@typeOfDay.displayName</option>
                        }
                    }
                </select>
                <label asp-for="TypeOfDay">Type Of Day</label>
                <span asp-validation-for="TypeOfDay" class="text-danger"></span>
            </div>

            <div class="form-floating mb-1">
                <input asp-for="PlannedWorkStart" class="form-control" />
                <label asp-for="PlannedWorkStart" class="control-label"></label>
                <span asp-validation-for="PlannedWorkStart" class="text-danger"></span>
            </div>
            <div class="form-floating mb-1">
                <input asp-for="PlannedWorkEnd" class="form-control" />
                <label asp-for="PlannedWorkEnd" class="control-label"></label>
                <span asp-validation-for="PlannedWorkEnd" class="text-danger"></span>
            </div>

            <div class="form-floating mb-1">
                <input class="form-control" disabled value="@string.Concat(Model.PlannedWorkTime.ToString(@"hh\:mm"))" />
                <label class="control-label">Planned Work Time</label>
            </div>

            <div class="form-floating mb-1">
                <input class="form-control" disabled value="@string.Concat(Model.PlannedBreakTime.ToString(@"hh\:mm"))" />
                <label class="control-label">Planned Break Time</label>
            </div>

            <div class="form-floating mb-1">
                <input class="form-control" disabled value="@string.Concat(Model?.RealOvertime < TimeSpan.Zero ? "-" : "", Model?.RealOvertime.ToString(@"hh\:mm"))" />
                <label class="control-label">Real Overtime</label>
            </div>

            <div class="form-group mt-2 mb-3">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div class="col-md-8">

        <partial name="../ActionTimes/_CreateForm"
                 model="new CreateActionTimeCommand() { EmployeeId = Model.EmployeeId, Start = Model.PlannedWorkStart, End = Model.PlannedWorkEnd, IsWork = true }" />

        <partial name="../ActionTimes/_ListOfActionTimes"
                 model="Model.ActionTimes?.OrderBy(x => x.Start)" />
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
